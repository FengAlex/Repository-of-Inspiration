import keyboard, time, random, buffer

input('按Enter键开始游戏')

screen = buffer.Buffers(2)

zero = ['# # # # # ',
        '#       # ',
        '#       # ',
        '#       # ',
        '# # # # # '
    ]

one = ['      # # ',
       '        # ',
       '        # ',
       '        # ',
       '        # '
    ]

two = ['# # # # # ',
       '        # ',
       '# # # # # ',
       '#         ',
       '# # # # # '
    ]

three = ['# # # # # ',
         '        # ',
         '# # # # # ',
         '        # ',
         '# # # # # '
    ]

four = ['#       # ',
        '#       # ',
        '# # # # # ',
        '        # ',
        '        # '
    ]

five = ['# # # # # ',
        '#         ',
        '# # # # # ',
        '        # ',
        '# # # # # '
    ]

six = ['# # # # # ',
       '#         ',
       '# # # # # ',
       '#       # ',
       '# # # # # '
    ]

seven = ['# # # # # ',
         '        # ',
         '        # ',
         '        # ',
         '        # '
    ]

eight = ['# # # # # ',
         '#       # ',
         '# # # # # ',
         '#       # ',
         '# # # # # '
    ]

nine = ['# # # # # ',
        '#       # ',
        '# # # # # ',
        '        # ',
        '# # # # # '
    ]

numbers = [zero, one, two, three, four, five, six, seven, eight, nine]

turn = ('|', '/', '-', '\\')
turnum = 0

def reset() :
    global M
    M = [
        ['■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '# # # # #   # # # # #   # # # # # '],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■', '#       #   #       #   #       # '],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■', '#       #   #       #   #       # '],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■', '#       #   #       #   #       # '],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■', '# # # # #   # # # # #   # # # # # '],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '  ', '■'],
        ['■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■', '■']
    ]

def blit(letter, place) :
    x, y = place
    global M
    M[y + 1][x + 1] = letter

def catch(key) :
    global K
    K = key.name
keyboard.on_press(catch)

def marker() :
    global M
    h = mark // 100
    t = mark % 100 // 10
    o = mark % 10
    li = []
    for i in range(5) :
        string = ''
        for j in (h, t, o) :
            string += '  ' + numbers[j][i]
        li.append(string)
    for i in range(5) :
        M[i][-1] = li[i]

def printing() :
    marker()
    screen.print()
    for a in range(len(M)) :
        screen.print('  ', '')
        for b in M[a] :
            screen.print(b, '')
        screen.print()
    screen.print(f'  {turn[turnum]} {text}')
    screen.flip()

while True :
    K = 'up'
    D = 0
    mark = 0
    head = (12, 12)
    path = [head]
    while True :
        food = (random.randrange(1, 24), random.randrange(1, 24))
        if path.count(food) == 0 :
            break
    wait = 0.1
    
    while True :
        text = '按ALT键暂停 按ESC键退出'
        reset()
        blit('□', food)
        for place in path :
            blit('■', place)
        printing()
        time.sleep(wait)

        if K == 'esc' :
            exit()
        elif K == 'alt' or K == 'right alt' :
            text = '按空格键继续 按ESC键退出'
            printing()
            while True :
                if K == 'esc' :
                    exit()
                elif K == 'space' :
                    break
        elif K == 'up' :
            if D != 2 :
                D = 0
        elif K == 'left' :
            if D != 3 :
                D = 1
        elif K == 'down' :
            if D != 0 :
                D = 2
        elif K == 'right' :
            if D != 1 :
                D = 3
        
        x, y = head
        if D == 0 :
            y -= 1
        elif D == 1 :
            x -= 1
        elif D == 2 :
            y += 1
        elif D == 3 :
            x += 1
        
        head = (x, y)
        if path.count(head) != 0 :
            text = '你咬死了自己 按下任意键再来一局 按下ESC键退出'
            break
        elif x < 0 or y < 0 or x >= 25 or y >= 25 :
            text = '你撞死在墙上 按下任意键再来一局 按下ESC键退出'
            break
        elif head == food :
            mark += 1
            wait -= 0.001
            while True :
                food = (random.randrange(1, 24), random.randrange(1, 24))
                if path.count(food) == 0 :
                    break
        else :
            del path[0]
        path.append(head)
        turnum = (turnum + 1) % 4

    time.sleep(0.25)
    printing()
    time.sleep(0.25)

    K = None
    while True :
        if K == 'esc' :
            exit()
        elif K != None:
            break